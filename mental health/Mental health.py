# -*- coding: utf-8 -*-
"""Untitled22.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11Mt_VjrYQnaQitptMZdRHtmLHG34K770
"""

#### MENTAL HEALTH DATA SET ####
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('survey.csv')

df.head(10)

df.shape

## checking information about dataset
df.info()

### we will check for null values
df.isnull().sum()

## droping duplicates if any.
df=df.drop_duplicates()

## here we arfe droping columns which we think is not helpful enough.
df = df.drop(columns="Timestamp")
df = df.drop(columns = "no_employees" )
df = df.drop(columns = "leave")
df = df.drop(columns = "anonymity")
df = df.drop(columns = "comments")

df.head(10)

## here we are replacing and making every values equal M for male and F for Female

df["Gender"] = df["Gender"].str.replace("Female" , "F")
df["Gender"] = df["Gender"].str.replace("female" , "F")
df["Gender"] = df["Gender"].str.replace("f" , "F")

df["Gender"] = df["Gender"].str.replace("m" , "M")
df["Gender"] = df["Gender"].str.replace("male" , "M")
df["Gender"] = df["Gender"].str.replace("Male" , "M")

###replaced genders one by one
df["Gender"] = df["Gender"].str.replace("M-ish" , "M")
df["Gender"] = df["Gender"].str.replace("Cis F" , "Trans-F")
df["Gender"] = df["Gender"].str.replace("soMething kinda M?" , "M")
df["Gender"] = df["Gender"].str.replace("Cis M" , "Trans-M")
df["Gender"] = df["Gender"].str.replace("WoMan" , "F")
df["Gender"] = df["Gender"].str.replace("Mal" , "M")
df["Gender"] = df["Gender"].str.replace("M (CIS)" , "Trans-M")
df["Gender"] = df["Gender"].str.replace("FeMake" , "F")
df["Gender"] = df["Gender"].str.replace("Make" , "M")
df["Gender"] = df["Gender"].str.replace("Enby" , "non-binary")
df["Gender"] = df["Gender"].str.replace("Fluid" , "non-binary")
df["Gender"] = df["Gender"].str.replace("Androgyne" , "non-binary")
df["Gender"] = df["Gender"].str.replace("Agender" , "non-binary")
df["Gender"] = df["Gender"].str.replace("cis-F/FeMMe" , "Trans-F")
df["Gender"] = df["Gender"].str.replace("Guy (-ish) ^_^" , "M")
df["Gender"] = df["Gender"].str.replace("M leaning androgynous" , "non-binary")
df["Gender"] = df["Gender"].str.replace("Man" , "M")
df["Gender"] = df["Gender"].str.replace("Trans woMan" , "Trans-F")
df["Gender"] = df["Gender"].str.replace("Msle" , "M")
df["Gender"] = df["Gender"].str.replace("Neuter" , "non-binary")
df["Gender"] = df["Gender"].str.replace("F (trans)" , "Trans-F")
df["Gender"] = df["Gender"].str.replace("F (cis)" , "Trans-F")
df["Gender"] = df["Gender"].str.replace("Mail" , "M")
df["Gender"] = df["Gender"].str.replace("A little about you" , "Child")
df["Gender"] = df["Gender"].str.replace("Malr" , "M")
df["Gender"] = df["Gender"].str.replace("FeMail" , "F")
df["Gender"] = df["Gender"].str.replace("ostensibly M, unsure what that really Means" , "M")
df["Gender"] = df["Gender"].str.replace("queer/she/they" , "non-binary")
df["Gender"] = df["Gender"].str.replace("woM" ,"F")
df["Gender"] = df["Gender"].str.replace("Nah" , "non-binary")
df["Gender"] = df["Gender"].str.replace("All" , "non-binary")
df["Gender"] = df["Gender"].str.replace("Genderqueer" , "non-binary")
df["Gender"] = df["Gender"].str.replace("Trans woM" , "Trans-F")
df["Gender"] = df["Gender"].str.replace("queer" , "non-binary")
df["Gender"] = df["Gender"].str.replace("cis M" , "Trans-M")
df["Gender"] = df["Gender"].str.replace("FeM" , "F")
df["Gender"] = df["Gender"].str.replace("Me" , "M")
df["Gender"] = df["Gender"].str.replace("Maler" , "M")

### filing NA with empty spaces
df =df.fillna("")

df.replace("N/a" , "")

## some of them is effecting mental health so we can assume yes some one is effecting the mental health
df["coworkers"] = df["coworkers"].str.replace("Some of them" , "Yes")
df["supervisor"] = df["supervisor"].str.replace("Some of them" , "Yes")

### checking
df.head(10)

### before when we where replacing M with male and F with female we were getting wrong data all f and m were replaced even from male word m(maleale) so now we can replace .
df["Gender"] = df["Gender"].str.replace("M" , "Male")
df["Gender"] = df["Gender"].str.replace("F" , "Female")

## checking
df.head(10)

#In many cases, "maybe" entries can be treated similarly to missing data, especially if they indicate uncertainty or lack of a definitive response. You can replace "maybe" with NaN values using Pandas:
df.replace('Maybe', np.nan, inplace=True)

#similary to Don't Know
df.replace("Don't know", np.nan, inplace=True)

### as we see dataset trend we observed NA can be replaced from No
df["self_employed"]=df["self_employed"].replace("" , "No")

df.reset_index(drop = True)

df.head(10)

### here we have some columns in negative and also more than 100 which can be outlliers so we can remove them
for x in df.index:
  if df.loc[x , "Age"] > 150 or df.loc[x , "Age"] < 1:
    df.drop(x , inplace = True)
df

df.reset_index(drop = True)

df.to_csv('survey_cleaned.csv')